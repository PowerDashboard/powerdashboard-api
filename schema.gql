# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type File {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  filename: String!
  mimeType: String!
  sizeBytes: Float!
  user: User!
  link: FileLink!
}

type FileLink {
  url: String!
  expiryTime: Float!
}

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  addUser(newUserData: NewUserInput!): User!
  login(loginData: LoginInput!): TokenResponse!
  addRole(newRoleData: NewRoleInput!): Role!
  updateRole(updateRoleData: UpdateRoleInput!, id: Float!): Role!
  deleteRole(updateRoleData: UpdateRoleInput!, id: Float!): Boolean!
  addSlide(newSlideData: NewSlideInput!): Slide!
  updateSlide(updateSlideData: UpdateSlideInput!, id: Float!): Slide!
  deleteSlide(id: Float!): Boolean!
  addScreen(newScreenData: NewScreenInput!): Screen!
  updateScreen(updateScreenData: UpdateScreenInput!, id: Float!): Screen!
  deleteScreen(id: Float!): Boolean!
  addFile(newFileData: NewFileInput!): File
  updateFile(updateFileData: UpdateFileInput!, id: Float!): File
  deleteFile(id: Float!): Boolean!
}

input NewFileInput {
  title: String!
  file: Upload!
}

input NewRoleInput {
  permissionType: PermissionType!
  userId: Int!
  screenId: Int!
}

input NewScreenInput {
  title: String!
}

input NewSlideInput {
  durationMilliseconds: Float!
  index: Float!
  appId: String!
  appConfig: String!
  screenId: Float!
}

input NewUserInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  picture: Upload
}

enum PermissionType {
  Admin
  Editor
}

type Query {
  viewer: User!
  user(email: String!): User!
  screen(id: Float!): Screen!
}

type Role {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  permissionType: PermissionType!
  user: User!
  screen: Screen!
}

type Screen {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  isActive: Boolean!
  roles: [Role!]
  slides: [Slide!]
}

type Slide {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  isActive: Boolean!
  durationMilliseconds: Float!
  index: Float!
  appId: String!
  appVersion: String!
  appConfig: String!
}

type Storage {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  usedKilobytes: Float!
  maxKilobytes: Float!
  user: User!
}

type TokenResponse {
  accessToken: String!
  tokenType: String!
  expiresIn: String!
}

input UpdateFileInput {
  title: String!
}

input UpdateRoleInput {
  permissionType: PermissionType!
}

input UpdateScreenInput {
  title: String!
  isActive: Boolean!
}

input UpdateSlideInput {
  durationMilliseconds: Float!
  index: Float!
  appId: String!
  appConfig: String!
}

"""File upload scalar type"""
scalar Upload

type User {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  email: String!
  firstName: String!
  lastName: String!
  storage: Storage!
  roles: [Role!]
  files: [File!]
}
